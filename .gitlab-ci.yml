# Build tools Dockerfile v3
image: quay.io/pantheon-public/build-tools-ci:4.x

# Default Variables
variables:
  BEHAT_ADMIN_USERNAME: pantheon-ci-testing-$CI_JOB_ID
  BEHAT_ADMIN_EMAIL: no-reply+ci-$CI_JOB_ID@getpantheon.com
  CI_PR_URL: $CI_MERGE_REQUEST_IID
  CURRENT_BRANCH: $CI_COMMIT_REF_NAME
  CGR_BASE_DIR: /composer/.global
  CGR_BIN_DIR: /composer/vendor/bin

# Cache libraries in between jobs
cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
  - vendor/
  - /composer/cache
  - $HOME/.composer/cache

stages:
- build
- test
- cleanup

before_script:
  # See https://docs.gitlab.com/ee/ci/ssh_keys/README.html
  - eval $(ssh-agent -s) && ssh-add <(echo "$SSH_PRIVATE_KEY")
  - mkdir -p $HOME/.ssh && echo "StrictHostKeyChecking no" >> "$HOME/.ssh/config"
  - export PATH=$PATH:$HOME/bin:$HOME/terminus/bin
  - export PR_ENV=${CI_MERGE_REQUEST_IID:+pr-$CI_MERGE_REQUEST_IID}
  - export TERMINUS_ENV=${PR_ENV:-dev}
  - export BEHAT_ADMIN_PASSWORD=$(openssl rand -base64 24)
  - terminus auth:login --machine-token="$TERMINUS_TOKEN"
  - git config --global user.email "$GITLAB_USER_EMAIL"
  - git config --global user.name "Gitlab CI"

deploy:multidev:
  stage: build
  environment:
    name: review/pr-$CI_MERGE_REQUEST_IID
    url: https://pr-$CI_MERGE_REQUEST_IID-$TERMINUS_SITE.pantheonsite.io/
  script:
    - terminus build:env:delete:pr -n "$TERMINUS_SITE" --yes
    - composer build-assets
    - terminus env:wake -n "$TERMINUS_SITE.dev"
    - terminus build-env:create -n "$TERMINUS_SITE.dev" "$TERMINUS_ENV" --yes
  only: 
    - merge_requests

deploy:dev:
  stage: build
  environment:
    name: dev
    url: https://dev-$TERMINUS_SITE.pantheonsite.io/
  script:
    - composer build-assets
    - terminus build-env:push-code $TERMINUS_SITE.dev
    - terminus build:env:delete:pr -n "$TERMINUS_SITE" --yes
  only:
    - master

test:code_sniff_unit_test:
  stage: test
  script:
    - composer install --no-ansi --no-interaction --optimize-autoloader --no-progress
    - rm -rf web
    - git checkout web
    - composer -n code-sniff
    - composer -n unit-test
  only:
    - merge_requests
    - master

test:behat:
  stage: test
  script:
    - composer install --no-ansi --no-interaction --optimize-autoloader --no-progress
    - ./.ci/behat-test.sh --tags=no_auth
  only:
    - merge_requests
    - master

test:behat:cleanup:
  stage: cleanup
  when: always
  script:
    - ./.ci/behat-test-cleanup.sh
  only:
    - merge_requests
    - master
  dependencies:
    - test:behat
